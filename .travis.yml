# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

env:
  global:
    - CRATE_NAME=eve
    - MAKE_DEB=yes
    - DEB_MAINTAINER="Aaron Power <theaaronepower@gmail.com>"
    - DEB_DESCRIPTION="A utility that allows you to count code, quickly."

matrix:
  include:
    # Linux
    - env: TARGET=aarch64-unknown-linux-gnu
    - env: TARGET=arm-unknown-linux-gnueabi
    - env: TARGET=armv7-unknown-linux-gnueabihf
    - env: TARGET=i686-unknown-linux-gnu
    - env: TARGET=i686-unknown-linux-musl
    - env: TARGET=mips-unknown-linux-gnu
    - env: TARGET=mips64-unknown-linux-gnuabi64
    - env: TARGET=mips64el-unknown-linux-gnuabi64
    - env: TARGET=mipsel-unknown-linux-gnu
    - env: TARGET=powerpc-unknown-linux-gnu
    - env: TARGET=powerpc64-unknown-linux-gnu
    - env: TARGET=powerpc64le-unknown-linux-gnu
    - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-linux-gnu
    - env: TARGET=x86_64-unknown-linux-musl

    # OSX
    - env: TARGET=i686-apple-darwin
      os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx

    # *BSD
    - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Windows
    - env: TARGET=x86_64-pc-windows-gnu

    # Testing other channels
    - env: TARGET=x86_64-unknown-linux-gnu
      rust: nightly
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

  allow_failures:
    - rust: nightly

before_install:
  - set -e
  - rustup self update

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  api_key:
    secure: QzaDfbqW0bc8veZR+6AJ8n2i63o5r/u9eKeYcztwVhhnlfekPW0BuWD0MiuUVURb+GG2NxDkqa2txohezmlPrTy0IvmwscQKUQm3eOnaiuhQu7xbCQsORNdAMU8ejTSfFPdqXYkWI2F91109XhqwfANpdBrYWfrDBO4o79bDfEHyLS37m6hP+7EFrnJ7VHWNIIefcc1c7tLOAqYxSiWXvvkRei6ae7a4Lug6njo7MPwj5ZwE9H97oHVqeOjImo0vUqtu60GGtnzLzq5oUrac9/Ob9KQQD0tT2y42FJ77XeNTA8jFdBECKYAWdn4mQYBqFN1ksNpRcHzPITo3doYRxWUz2994PV0eSd9mUdACvnflgfejnHSZ1vp5d86GkrCvGQplEx8wSq4+GxQMtQ3a2HCgy8Q2awIhmQldXS5QQVXlroFD3RtoU6s99RRQu1ezt2d3msNNwtL5A5LHb+lIDZHOZ5+oswOclN5JFgm4pY3miq0YACCUt3MOtPigkkvFQcHC3MztvFNIqaRnUevlBnDFtmj6AiUebzwXRk6guMcEfcJG7vwtCsKjwA6ia04sf09Pao74uxwAa0IaoekZaz2xIBtLdtBs9+jxhiDmNv6bCcv2DU6w9KJngMPzLDt2VkZIPXgp9uBakFTroLxiyGJgb7BmUZytIV9Q5nhwytY
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
